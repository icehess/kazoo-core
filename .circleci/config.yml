version: 2

workflows:
  version: 2
  build_branch:
    jobs:
      - setup
      - build_deps:
          requires:
            - setup
      - build:
          requires:
            - build_deps
      - eunit_tests:
          requires:
            - build_deps
      - checks:
          requires:
            - build
      - docs:
          requires:
            - build
      - analyze:
          requires:
            - build
      - release:
          requires:
            - build

  build_release:
    jobs:
      - setup:
          filters:
             tags:
               only: /^\d+\.\d+\.\d+$/
             branches:
               ignore: /.*/
      - build_deps:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
          requires:
            - setup
      - build:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
          requires:
            - build_deps
      - eunit_tests:
         filters:
           tags:
             only: /^\d+\.\d+\.\d+$/
           branches:
             ignore: /.*/
         requires:
           - build_deps
      - checks:
          filters:
             tags:
               only: /^\d+\.\d+\.\d+$/
             branches:
               ignore: /.*/
          requires:
            - build
      - docs:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
          requires:
            - build
      - analyze:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
          requires:
            - build
      - release:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
          requires:
            - build

defaults: &defaults
  docker:
    - image: offical2600hz/circleci:22.3
  shell: /bin/bash --login
  working_directory: ~/2600hz/the_app
  environment:
    CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
    CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    BASH_ENV: "/home/circleci/2600hz/.bashrc"

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Setting up core repository
          command: |
            BAZE="$(cat "${HOME}/2600hz/the_app/.base_branch")"
            if [ -n "$BAZE" ]; then
              printf "\n\nexport BASE_BRANCH=$BAZE\n" | tee -a $BASH_ENV
            else
              echo "add base branch name of main Kazoo repo (like origin/master) to '.base_branch' in your application root directory"
              exit 1
            fi
      - run:
          name: Generating build environment variables
          command: |
            printf "export KAZOO_APP=core\n" | tee -a $BASH_ENV
            printf "export KAZOO_ROOT=${HOME}/2600hz/kazoo\n" | tee -a $BASH_ENV
            printf "export APP_PATH=core\n\n" | tee -a $BASH_ENV
      - run:
          name: Displaying environment information
          command: |
            echo ":: behold, running ci tests for application: $KAZOO_APP"
            echo "KAZOO_APP: $KAZOO_APP"
            echo "KAZOO_ROOT: $KAZOO_ROOT"
            echo "APP_PATH: $APP_PATH"
            echo "BASE_BRANCH: $BASE_BRANCH"
            if [ -z "$KAZOO_APP" ] || [ -z "$KAZOO_ROOT" ] || [ -z "$BASE_BRANCH" ] ; then
              echo ":: eniroment variable are not set"
              exit 1
            fi
      - run:
          name: Creating artifacts directory
          command: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run:
          name: Cloning KAZOO repository
          command : |
            if [ ! -d ${KAZOO_ROOT} ]; then
              echo ":: Cloning KAZOO repository to $KAZOO_ROOT"
              git clone https://github.com/2600hz/kazoo $KAZOO_ROOT
            else
              echo ":: Core repository is already cloned"
            fi
      - run:
          name: Running core setup script
          command: |
            cp -a ${HOME}/2600hz/the_app $KAZOO_ROOT/core

      - run:
          name: Export changed files
          command: |
            cd "$KAZOO_ROOT/$APP_PATH"
            for file in $(git --no-pager diff --name-only HEAD $BASE_BRANCH); do
              CHANGED+=" $KAZOO_ROOT/$APP_PATH/$file"
            done
            printf 'export CHANGED="%s"\n' "$CHANGED" | tee -a $BASH_ENV
      - persist_to_workspace:
          root: ~/
          paths:
            - 2600hz

  build_deps:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - deps-v1-{{ checksum "~/2600hz/kazoo/make/deps.mk" }}-{{ checksum "/usr/local/lib/erlang/releases/RELEASES" }}
      - run:
          name: Calculating dependency hash for CircleCI cache
          command: |
            deps_hash=$(md5sum $KAZOO_ROOT/make/deps.mk | cut -d" " -f1)
            if [ x"$(cat $KAZOO_ROOT/.git/.kz_deps_hash)" = x"$deps_hash" ]; then
              touch "$KAZOO_ROOT/make/.deps.mk.$deps_hash"
            fi
            (echo -n $(md5sum $KAZOO_ROOT/make/deps.mk | cut -d" " -f1) | tee "$KAZOO_ROOT/.git/.kz_deps_hash") && echo
            md5sum $KAZOO_ROOT/make/deps.mk
            ls -al $KAZOO_ROOT/make
      - run:
          name: Making deps
          command: make -C ${KAZOO_ROOT} deps
      - save_cache:
          key: deps-v1-{{ checksum "~/2600hz/kazoo/make/deps.mk" }}-{{ checksum "/usr/local/lib/erlang/releases/RELEASES" }}
          paths:
            - ~/2600hz/kazoo/deps/
            - ~/2600hz/kazoo/erlang.mk
            - ~/2600hz/kazoo/.erlang.mk
            - ~/2600hz/kazoo/.git/.kz_deps_hash
      - persist_to_workspace:
          root: ~/
          paths:
            - 2600hz

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - deps-v1-{{ checksum "~/2600hz/kazoo/make/deps.mk" }}-{{ checksum "/usr/local/lib/erlang/releases/RELEASES" }}
      - run:
          name: Compiling the project
          command: JOBS="2" make -C ${KAZOO_ROOT}
      - persist_to_workspace:
          root: ~/
          paths:
            - 2600hz

  eunit_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - deps-v1-{{ checksum "~/2600hz/kazoo/make/deps.mk" }}-{{ checksum "/usr/local/lib/erlang/releases/RELEASES" }}
      - run:
          name: Compiling Kazoo core for unit test environment
          command: ERLC_OPTS='-DPROPER' make -C ${KAZOO_ROOT}/core compile-test
      - run:
          name: Compiling Crossbar for path finding in schema loading
          command: ERLC_OPTS='-DPROPER' make -C ${KAZOO_ROOT} apps
      - run:
          name: Running Eunit tests
          command: make -C "$KAZOO_ROOT/$APP_PATH" eunit
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -name "TEST-*.xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit/

      ## disabling this for now until we figure out why it is crashing, and how to set token
      # - run:
      #     name: Uploading Coverage Report
      #     command: make coverage-report

  checks:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Running code formatter
          command: TO_FMT="$CHANGED" make -C ${KAZOO_ROOT} fmt
      - run:
          name: Running code checks
          command: make -C ${KAZOO_ROOT} code_checks
      - run:
          name: Checking app source file
          command: make -C ${KAZOO_ROOT} app_applications
      - run:
          name: Generating sup bash completion files
          command: make -C ${KAZOO_ROOT} sup_completion
      - run:
          name: Running xref check
          command: make -C ${KAZOO_ROOT} xref
      - run:
          name: Running Elvis code style check
          command: make -C ${KAZOO_ROOT} elvis
      - run:
          name: Checking for unstaged files
          command: |
            cd $KAZOO_ROOT/$APP_PATH
            $KAZOO_ROOT/scripts/check-unstaged.bash

  docs:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Generating APIs
          command: make -C ${KAZOO_ROOT} apis
      - run:
          name: Validating CouchDB view files
          command: make -C ${KAZOO_ROOT} validate-js
      - run:
          name: Validating schemas
          command: make -C ${KAZOO_ROOT} validate-schemas
      - run:
          name: Generating docs
          command: make -C ${KAZOO_ROOT} docs
      - run:
          name: Checking doc states
          command: ${KAZOO_ROOT}/scripts/state-of-docs.py || true
      - run:
          name: Validating EDoc states
          command: ${KAZOO_ROOT}/scripts/state-of-edoc.escript
      - run:
          name: Checking for unstaged files
          command: |
            cd $KAZOO_ROOT/$APP_PATH
            $KAZOO_ROOT/scripts/check-unstaged.bash

  analyze:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - plt-v1-{{ checksum "~/2600hz/kazoo/make/deps.mk" }}-{{ checksum "/usr/local/lib/erlang/releases/RELEASES" }}
      - run:
          name: Building plt file
          command: make -C ${KAZOO_ROOT} build-plt
      - run:
          name: Dailyzing changed Erlang files
          command: make -C ${KAZOO_ROOT} dialyze-changed
      - save_cache:
          key: plt-v1-{{ checksum "~/2600hz/kazoo/make/deps.mk" }}-{{ checksum "/usr/local/lib/erlang/releases/RELEASES" }}
          paths:
            - ~/2600hz/kazoo/.kazoo.plt

  release:
    <<: *defaults
    docker:
      - image: offical2600hz/circleci:22.3
      - image: couchdb:3.0
        environment:
          COUCHDB_USER: admin
          COUCHDB_PASSWORD: admin
      - image: 2600hz/rabbitmq
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Remove config dir for now
          command: rm -rf ${KAZOO_ROOT}/core/.circleci
      - run:
          name: Building CI release
          command: make -C ${KAZOO_ROOT} build-ci-release
      - run:
          name: Running Kazoo release
          command: KAZOO_CONFIG=${KAZOO_ROOT}/rel/ci.config.ini REL="kazoo_apps" ACT="console" NODE_NAME_TYPE="-sname" make -C ${KAZOO_ROOT} release
      - run:
          name: Copying Relx config artifacts
          command: cp ${KAZOO_ROOT}/rel/ci.relx.config $CIRCLE_ARTIFACTS/
      - run:
          name: Copying release artifacts
          command: find ${KAZOO_ROOT}/_rel/kazoo/releases -name kazoo.rel -exec cp {} $CIRCLE_ARTIFACTS/ \;
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - run:
          name: Checking for errors in artifacts
          command: |
            if [[ $(grep -c -v -F 'exit with reason shutdown' ${CIRCLE_ARTIFACTS}/log/error.log) -gt 0 ]]; then
              printf ":: some errors are detected during running release\n\n"
              cat ${CIRCLE_ARTIFACTS}/log/error.log
              exit 1
            else
              printf ":: no errors are found in release\n\n"
            fi
